#include "Tester.h"

Tester::Tester() {
	tab[0] = "111111000110001111111000110001";
	tab[1] = "111111000111111100011000111111";
	tab[2] = "111111000010000100001000011111";
	tab[3] = "111111000110001100011000111111";
	tab[4] = "111111000011111100001000011111";
	tab[5] = "111111000011111100001000010000";
	tab[6] = "111111000011111100011000111111";
	tab[7] = "100011000111111100011000110001";
	tab[8] = "011100010000100001000010001110";
	tab[9] = "111110000100001000011000111111";
	tab[10] = "100011001011100110001010010011";
	tab[11] = "100001000010000100001000011111";
	tab[12] = "100011101110101100011000110001";
	tab[13] = "100011100110101101011001110001";
	tab[14] = "011101000110001100011000101110";
	tab[15] = "111101000110001111101000010000";
	tab[16] = "111101000110001111101110010011";
	tab[17] = "011111000001110000010000111110";
	tab[18] = "111110010000100001000010000100";
	tab[19] = "100011000110001100011000101110";
	tab[20] = "100011000110001101011101110001";
	tab[21] = "100010101000100001000101010001";
	tab[22] = "100010101000100001000010000100";
	tab[23] = "111110001000100001000100011111";
	tab[24] = "000000111000001011101000101110";
	tab[25] = "000000100001000011000101001100";
	tab[26] = "000000000001110100001000001110";
	tab[27] = "000000001000010011101001001110";
	tab[28] = "000000111010001111101000001111";
	tab[29] = "000000001000100011100010000100";
	tab[30] = "000000111010001011101000001111";
	tab[31] = "000000100001000011100101001010";
	tab[32] = "000000010000000001000010000100";
	tab[33] = "001000000000100011000010001100";
	tab[34] = "000000100001010011000101001001";
	tab[35] = "000000100001000010000100000110";
	tab[36] = "000000000011010101011010110101";
	tab[37] = "000000000010110110011000110001";
	tab[38] = "000000000001110100011000101110";
	tab[39] = "000000111001001011100100001000";
	tab[40] = "000000000001010011000100001000";
	tab[41] = "000000000000100010100001000100";
	tab[42] = "000000010001110001000010000010";
	tab[43] = "000000000001010010100101000110";
	tab[44] = "000000000000000101011010101010";
	tab[45] = "000001000101010001000101010001";
	tab[46] = "000000000001010001000100010000";
	tab[47] = "000000000001110001000100001110";
	tab[48] = "000000000000000000000000000000";

	tabTest[0] = "111111000010001111111000110001";
	tabTest[1] = "011101000110001111111000110001";
	tabTest[2] = "100011100110101101011000110101";
	tabTest[3] = "000100001000010010101000001110";
	tabTest[4] = "000010000100100010100001000100";
	tabTest[5] = "100010111010101001000101010001";
	tabTest[6] = "011100000110001110011000111110";
	tabTest[7] = "111101000110001111101000010100";
	tabTest[8] = "111101000110101111101110000011";
	tabTest[9] = "011111000001110010010000111010";
}

void Tester::wypiszLiterke(int tmp) {
	for (int i = 1; i < 31; i++) {
		if (tab[tmp].at(i-1) == 49)
			std::cout << "1";
		else
			std::cout << " ";
		if (i % 5 == 0)
			std::cout << std::endl;
	}
}

void Tester::wypiszLiterke(std::string tmp) {
	for (int i = 1; i < 31; i++) {
		if (tmp.at(i - 1) == 49)
			std::cout << "1";
		else
			std::cout << " ";
		if (i % 5 == 0)
			std::cout << std::endl;
	}
}

void Tester::wypisz_kilka_literek(int tmp1, int tmp2, int tmp3, int tmp4, int tmp5, int tmp6, int tmp7, int tmp8, int tmp9, int tmp10, int tmp11, int tmp12, int tmp13, int tmp14, int tmp15) {
	int tabtmp[15];
	tabtmp[0] = tmp1;
	tabtmp[1] = tmp2;
	tabtmp[2] = tmp3;
	tabtmp[3] = tmp4;
	tabtmp[4] = tmp5;
	tabtmp[5] = tmp6;
	tabtmp[6] = tmp7;
	tabtmp[7] = tmp8;
	tabtmp[8] = tmp9;
	tabtmp[9] = tmp10;
	tabtmp[10] = tmp11;
	tabtmp[11] = tmp12;
	tabtmp[12] = tmp13;
	tabtmp[13] = tmp14;
	tabtmp[14] = tmp15;


	for (int i = 0; i < 30; i += 5) {
		for (int k = 0; k < 15; k++) {
			for (int j = 0; j < 5; j++) {
				if (tab[tabtmp[k]].at(i + j) == 49)
					std::cout << "1";
				else
					std::cout << " ";
			}
			std::cout << " ";
		}
		std::cout << std::endl;
	}
}